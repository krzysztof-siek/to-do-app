{"version":3,"sources":["config.js","components/Task.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Task","props","_props$task","task","name","done","prio","uid","react_default","a","createElement","className","id","onClick","removeData","style","backgroundColor","border","updateData","doneHandler","TaskList","taskList","toDoTask","filter","map","components_Task","key","doneTask","length","arrayUid","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","writeUserData","Firebase","database","ref","set","state","getUserData","on","snapshot","val","setState","close","TimelineLite","selectedTask","document","getElementById","fromTo","x","toConsumableArray","setTimeout","newState","data","refs","value","prioHandler","e","handleSubmit","event","preventDefault","devIndex","findIndex","Date","getTime","toString","unshift","el","initializeApp","width","height","ease","Power2","easeInOut","delay","y","prevProps","prevState","onSubmit","type","placeholder","onChange","checked","components_TaskList","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a687d69.chunk.js","sourcesContent":["const config = {\r\n  apiKey: \"AIzaSyAxvMjsnd353f6pz-ko8Z9eMrA2qEGBOSk\",\r\n  authDomain: \"testowy1-abf5c.firebaseapp.com\",\r\n  databaseURL: \"https://testowy1-abf5c.firebaseio.com\",\r\n  projectId: \"testowy1-abf5c\",\r\n  storageBucket: \"testowy1-abf5c.appspot.com\",\r\n  messagingSenderId: \"748653818033\",\r\n  appId: \"1:748653818033:web:68db10bc45904063\"\r\n};\r\n\r\nexport default config;\r\n","import React from \"react\";\r\nimport \"../styles/Task.css\";\r\n\r\nconst Task = props => {\r\n  const {name, done, prio, uid} = props.task;\r\n  const task = props.task;\r\n\r\n  if (!done) {\r\n    return (\r\n      <div\r\n        className=\"Task\"\r\n        id={uid}\r\n        style={\r\n          prio\r\n            ? {\r\n                backgroundColor: \"rgba(242, 38, 19, 0.3)\",\r\n                border: \"1px solid black\"\r\n              }\r\n            : null\r\n        }>\r\n        <h2 className='taskText'>{name}</h2>\r\n       \r\n\r\n        {prio ? (\r\n          <span className=\"icon-important\">\r\n            <i className=\"fas fa-exclamation\" />\r\n          </span>\r\n        ) : null}\r\n\r\n        <span className=\"icon-close\" onClick={() => props.removeData(task)}>\r\n          <i className=\"fas fa-times-circle\" />\r\n        </span>\r\n        <span className=\"icon-edit\" onClick={() => props.updateData(task)}>\r\n          <i className=\"fas fa-edit\" />\r\n        </span>\r\n        <span className=\"icon-done\" onClick={() => props.doneHandler(uid)}>\r\n          <i className=\"fas fa-check-circle\" />\r\n        </span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"Task\" id={uid}>\r\n        <h2 className='taskText'>{name}</h2>\r\n\r\n        <span className=\"icon-close\" onClick={() => props.removeData(task)}>\r\n          <i className=\"fas fa-times-circle\" />\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = props => {\r\n  const {taskList} = props;\r\n  const toDoTask = taskList\r\n    .filter(task => !task.done)\r\n    .map(task => (\r\n      <Task\r\n        key={task.uid}\r\n        task={task}\r\n        removeData={props.removeData}\r\n        updateData={props.updateData}\r\n        doneHandler={props.doneHandler}\r\n      />\r\n    ));\r\n\r\n  const doneTask = taskList\r\n    .filter(task => task.done)\r\n    .map(task => (\r\n      <Task\r\n        key={task.uid}\r\n        task={task}\r\n        removeData={props.removeData}\r\n        updateData={props.updateData}\r\n        doneHandler={props.doneHandler}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div className=\"TaskList\">\r\n      <div className=\"toDoTasks\">\r\n        {toDoTask.length > 0 ? (\r\n          <h2 className=\"section\">Do zrobiena:{toDoTask.length}</h2>\r\n        ) : (\r\n          <h2>Brak zadań do zrobinia.</h2>\r\n        )}\r\n        {toDoTask}\r\n      </div>\r\n      <div className=\"doneTasks\">\r\n        {doneTask.length > 0 ? (\r\n          <h2 className=\"section\">Zrobione: {doneTask.length}</h2>\r\n        ) : (\r\n          <h2>Brak zadań zrobionych</h2>\r\n        )}\r\n        {doneTask}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport \"./styles/App.css\";\r\nimport Firebase from \"firebase\";\r\nimport config from \"./config\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport {TimelineLite, Power2} from \"gsap/all\";\r\n\r\nlet arrayUid = [];\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    Firebase.initializeApp(config);\r\n\r\n    this.state = {\r\n      taskList: [],\r\n      prio: false\r\n    };\r\n  }\r\n\r\n  writeUserData = () => {\r\n    Firebase.database()\r\n      .ref(\"/\")\r\n      .set(this.state);\r\n  };\r\n\r\n  getUserData = () => {\r\n    let ref = Firebase.database().ref(\"/\");\r\n    ref.on(\"value\", snapshot => {\r\n      const state = snapshot.val();\r\n      this.setState(state);\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserData();\r\n    const bgc = new TimelineLite();\r\n    bgc\r\n      .fromTo(\".App\", 0.8, {width: 10}, {width: \"100vw\"})\r\n      .fromTo(\r\n        \".App\",\r\n        0.8,\r\n        {height: 5},\r\n        {height: \"100vh\", ease: Power2.easeInOut}\r\n      );\r\n    const headerTxt = new TimelineLite();\r\n    headerTxt.delay(2).fromTo(\".logo\", 1, {y: -200}, {y: 0});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState !== this.state) {\r\n      this.writeUserData();\r\n      if (arrayUid.length > 0) {\r\n        const close = new TimelineLite();\r\n        const selectedTask = document.getElementById(arrayUid.toString());\r\n\r\n        close.fromTo(selectedTask, 1, {x: \"-100vw\"}, {x: 0});\r\n        arrayUid = [];\r\n      } else {\r\n      }\r\n    }\r\n  }\r\n\r\n  removeData = task => {\r\n    const close = new TimelineLite();\r\n    const selectedTask = document.getElementById(task.uid);\r\n    close.fromTo(selectedTask, 1, {x: 0}, {x: \"1000vw\"});\r\n\r\n    const taskList = [...this.state.taskList];\r\n    setTimeout(() => {\r\n      const newState = taskList.filter(data => {\r\n        return data.uid !== task.uid;\r\n      });\r\n      this.setState({taskList: newState});\r\n    }, 500);\r\n  };\r\n\r\n  updateData = task => {\r\n    if (task.prio) {\r\n      this.setState({prio: true});\r\n    } else {\r\n      this.setState({prio: false});\r\n    }\r\n    this.refs.uid.value = task.uid;\r\n\r\n    this.refs.name.value = task.name;\r\n  };\r\n\r\n  prioHandler = e => {\r\n    this.setState({prio: !this.state.prio});\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    let name = this.refs.name.value;\r\n    let prio = this.state.prio;\r\n    let uid = this.refs.uid.value;\r\n\r\n    if (uid && name) {\r\n      const {taskList} = this.state;\r\n      const devIndex = taskList.findIndex(data => {\r\n        return data.uid === uid;\r\n      });\r\n      taskList[devIndex].name = name;\r\n      taskList[devIndex].prio = prio;\r\n      this.setState({taskList});\r\n    } else if (name) {\r\n      const uid = new Date().getTime().toString();\r\n      const done = false;\r\n      const {taskList} = this.state;\r\n      taskList.unshift({uid, name, prio, done});\r\n      arrayUid = [];\r\n      arrayUid.unshift(uid);\r\n      this.setState({taskList});\r\n    }\r\n    this.setState({prio: false});\r\n\r\n    this.refs.name.value = \"\";\r\n    this.refs.uid.value = \"\";\r\n  };\r\n\r\n  doneHandler = id => {\r\n    const taskList = [...this.state.taskList];\r\n    taskList.map(el => {\r\n      if (el.uid === id) {\r\n        el.done = true;\r\n      }\r\n      this.setState({taskList});\r\n    });\r\n    arrayUid = [];\r\n    arrayUid.unshift(id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"App\">\r\n          <div className=\"addTask\">\r\n            <div className=\"logo\">\r\n              <h3>Aplikacja To Do</h3>\r\n            </div>\r\n            <form onSubmit={this.handleSubmit} className=\"form\">\r\n              <input type=\"hidden\" ref=\"index\" />\r\n              <input type=\"text\" ref=\"name\" placeholder=\"Dodaj zadanie\">\r\n              </input>\r\n              <div className=\"form-group\">\r\n              <label> Priorytet ?</label>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={this.prioHandler}\r\n                checked={this.state.prio}\r\n                />\r\n                </div>\r\n              <button type=\"submit\" className=\"addTaskButton\">\r\n                Dodaj\r\n              </button>\r\n              <input type=\"hidden\" ref=\"uid\" />\r\n            </form>\r\n          </div>\r\n\r\n          <TaskList\r\n            taskList={this.state.taskList}\r\n            removeData={this.removeData}\r\n            updateData={this.updateData}\r\n            doneHandler={this.doneHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}